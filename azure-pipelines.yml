# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
variables:
- template: variable.yml


pool:
  vmImage: $(vmimage)

stages:
  - stage: 'BUILD'
    jobs:
      - job: 
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: $(nodeversion)
          displayName: 'Install Node.js'

        - script: |
            npm install -g @angular/cli
            npm install
            ng build --prod
          displayName: 'npm install and build'
        - task: CopyFiles@2
          inputs:
            Contents: '**'
            TargetFolder: '$(build.artifactstagingdirectory)'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
            ArtifactName: 'drop'
            publishLocation: 'Container'
  - stage: 'Dev'
    jobs:
      - deployment: 'DeployToDev'
        environment: 'dev'
        strategy:
            runOnce:
              deploy:
                steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'Free Trial (4dac56d2-d8af-42c7-9f33-548f2a10ddab)'
                    appType: 'webApp'
                    WebAppName: 'multistage83'
                    deployToSlotOrASE: true
                    ResourceGroupName: 'newwebapp'
                    SlotName: 'dev'
                    packageForLinux: '$(System.ArtifactsDirectory)/drop'
  - stage: 'QA'
    jobs:
      - deployment: 'DeployToQA'
        environment: 'QA'
        strategy:
            runOnce:
              deploy:
                steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'Free Trial (4dac56d2-d8af-42c7-9f33-548f2a10ddab)'
                    appType: 'webApp'
                    WebAppName: 'multistage83'
                    deployToSlotOrASE: true
                    ResourceGroupName: 'newwebapp'
                    SlotName: 'QA'
                    packageForLinux: '$(System.ArtifactsDirectory)/drop'                  

  - stage: 'prod'
    jobs:
      - deployment: 'DeployToProd'
        environment: 'prod'
        strategy:
            runOnce:
              deploy:
                steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'Free Trial (4dac56d2-d8af-42c7-9f33-548f2a10ddab)'
                    appType: 'webApp'
                    WebAppName: 'multistage83'
                    deployToSlotOrASE: true
                    ResourceGroupName: 'newwebapp'
                    SlotName: 'production'
                    packageForLinux: '$(System.ArtifactsDirectory)/drop'                  
      
           
